image: $CI_REGISTRY_IMAGE/env

stages:
 - deploy

.deploy:template:
  image: docker:stable
  stage: deploy
  only:
    - branches
  when: manual
  before_script:
    - 'which ssh-agent || ( apk --update add openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -2 $PUBLISH_USER@$PUBLISH_URL "docker ps && docker info && docker-compose version"
    - ssh -2 $PUBLISH_USER@$PUBLISH_URL "docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}"
    - ssh -2 $PUBLISH_USER@$PUBLISH_URL "mkdir -p ${DEPLOY_FOLDER} && cd ${DEPLOY_FOLDER} && if [ ! -d ${CI_PROJECT_NAME} ] ; then git clone ${CI_PROJECT_URL}.git ; fi && cd ${CI_PROJECT_NAME} && git clean -dffx && git fetch && git checkout $CI_COMMIT_SHA"
    - ssh -2 $PUBLISH_USER@$PUBLISH_URL "SPOT_DOCKER_TAG=$SPOT_DOCKER_TAG && COMPOSE_FILE=$COMPOSE_FILE && SPOT_HOSTNAME=$SPOT_HOSTNAME && export SPOT_HOSTNAME COMPOSE_FILE SPOT_DOCKER_TAG && cd ${DEPLOY_FOLDER}/${CI_PROJECT_NAME} && docker-compose pull && docker-compose up -d --build --force-recreate --remove-orphans"

test:
  extends: .deploy:template
  variables:
    PUBLISH_USER: root
    PUBLISH_URL: spot.test.ecloud.global
    GIT_STRATEGY: none
    SPOT_HOSTNAME: spot.test.ecloud.global
    SSH_PRIVATE_KEY: ${SSH_PRIVATE_KEY_TEST}
    COMPOSE_FILE: docker-compose.yml:docker-compose-dev.yml
    DEPLOY_FOLDER: /mnt/data

prod:
  extends: .deploy:template
  only:
    - tags
  variables:
    PUBLISH_USER: root
    PUBLISH_URL: spot.ecloud.global
    GIT_STRATEGY: none
    SPOT_HOSTNAME: spot.ecloud.global
    SPOT_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
    SSH_PRIVATE_KEY: ${SSH_PRIVATE_KEY_PROD}
    COMPOSE_FILE: docker-compose.yml
    DEPLOY_FOLDER: /mnt/data
