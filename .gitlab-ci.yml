image: $CI_REGISTRY_IMAGE/env:latest

stages:
 - check
 - build
 - test
 - deploy

services:
 - docker:18-dind


python:
  stage: check
  before_script:
    - ./manage.sh update_dev_packages
  script:
    - make test.pep8
    - make test.pylint

build:web:
  stage: build
  before_script:
    - ./manage.sh npm_packages
    - ./manage.sh update_dev_packages
  script:
    - ./manage.sh locales
    - make V=1 themes.eelo

.build:docker:
  stage: build
  image: docker:git
  tags:
    - generic_privileged
  services:
    - docker:18-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
    - docker build -t $CI_REGISTRY_IMAGE/nginx -f nginx.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/nginx

build:docker:master:
  extends: .build:docker
  only:
    - master

build:docker:tags:
  extends: .build:docker
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - docker build -t $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG -f nginx.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG
  only:
    - tags

test:unit:
  stage: test
  before_script:
    - ./manage.sh update_dev_packages
  script:
    - make test.coverage
  coverage: '/TOTAL.*\s+(\d+%)$/'

.deploy:template:
  stage: deploy
  before_script:
#    - eval $(ssh-agent -s)
#    - echo "$PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY_ED" > $HOME/.ssh/id_ed25519
    - echo "$SSH_PUBKEY_ED" > $HOME/.ssh/id_ed25519.pub
    - echo "$SSH_KNOWN_HOSTS" > $HOME/.ssh/known_hosts
    - chmod 600 ~/.ssh/id_ed25519
    - chmod 644 ~/.ssh/known_hosts ~/.ssh/id_ed25519.pub
#    - ssh $SSH_USER@$BACKEND1_HOST
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    - docker pull registry.gitlab.e.foundation:5000/e/cloud/my-spot/env

.deploy:template2:
  stage: deploy
  before_script:
#    - eval $(ssh-agent -s)
#    - echo "$PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY_ED" > $HOME/.ssh/id_ed25519
    - echo "$SSH_PUBKEY_ED" > $HOME/.ssh/id_ed25519.pub
    - echo "$SSH_KNOWN_HOSTS" > $HOME/.ssh/known_hosts
    - chmod 600 ~/.ssh/id_ed25519
    - chmod 644 ~/.ssh/known_hosts ~/.ssh/id_ed25519.pub
    - ssh $DOCKER_HOST "cd $PATH_STAGING"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    - docker pull registry.gitlab.e.foundation:5000/e/cloud/my-spot/env

#deploy:spot.test.cloud.global:
#  extends: .deploy:template
#  when: manual
#  only:
#    - branches
#  environment:
#    name: test
#    url: https://spot.test.ecloud.global
#  variables:
#    DOCKER_HOST: ssh://root@spot.test.ecloud.global
#    FILTRON_RULES: /etc/filtron/rules.json
#    SPOT_HOSTNAME: spot.test.ecloud.global
#    SPOT_MORTY_HOSTNAME: proxy.spot.test.ecloud.global
#    SEARX_MORTY_URL: https://proxy.spot.test.ecloud.global
#    COMPOSE_PROJECT_NAME: my-spot
#    PRIVATE_KEY: ${PRIVATE_KEY_TEST}
#  script:
#    - docker-compose up -d --build --scale tor=5
#    - docker-compose restart filtron

deploy:spot.eeo.one.backend1:
  extends: .deploy:template
  when: manual
  only:
    - branches
  environment:
    name: eeo1
    url: https://spot.eeo.one
  variables:
#    DOCKER_HOST: ssh://root@web1.ecloud.global
#    FILTRON_RULES: /etc/filtron/rules.json
    SPOT_HOSTNAME: spot.eeo.one
    SPOT_MORTY_HOSTNAME: proxy.spot.eeo.one
    COMPOSE_PROJECT_NAME: my-spot
#    PRIVATE_KEY: ${PRIVATE_KEY_WEB1}
    WIREGUARD_IP: ${BACKEND1_WG_IP}
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME ($SSH_USER@$BACKEND1_HOST - $BACKEND1_WG_IP - $WIREGUARD_IP)"
    - ssh $SSH_USER@$BACKEND1_HOST "cd $PATH_STAGING && sed -i 's/WIREGUARD_IP=127.0.0.1/WIREGUARD_IP=$WIREGUARD_IP/g' .env && sed -i 's/SPOT_HOSTNAME=spot.ecloud.global/SPOT_HOSTNAME=$SPOT_HOSTNAME/g' .env && sed -i 's/SPOT_MORTY_HOSTNAME=proxy.spot.ecloud.global/SPOT_MORTY_HOSTNAME=$SPOT_MORTY_HOSTNAME/g' .env && sed -i 's/localhost:8089/$SPOT_MORTY_HOSTNAME/g' .env && docker-compose up -d --build --scale tor=5 && docker-compose restart filtron"
    

deploy:spot.eeo.one.backend2:
  extends: .deploy:template2
  when: manual
  only:
    - branches
  environment:
    name: eeo2
    url: https://spot.eeo.one
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${BACKEND2_HOST}
#    FILTRON_RULES: /etc/filtron/rules.json
    SPOT_HOSTNAME: spot.eeo.one
    SPOT_MORTY_HOSTNAME: proxy.spot.eeo.one
    SEARX_MORTY_URL: https://proxy.spot.eeo.one
    COMPOSE_PROJECT_NAME: my-spot
#    PRIVATE_KEY: ${PRIVATE_KEY_WEB2}
    WIREGUARD_IP: ${BACKEND2_WG_IP}
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME ($SSH_USER@$BACKEND2_HOST - $BACKEND2_WG_IP - $WIREGUARD_IP)" 
    - docker-compose up -d --build --scale tor=5
    - docker-compose restart filtron
    # - ssh $SSH_USER@$BACKEND2_HOST "cd $PATH_STAGING && docker-compose up -d --build --build-arg $WIREGUARD_IP --scale tor=5 && docker-compose restart filtron"
    # - docker-compose up -d --build --scale tor=5
    #- docker-compose restart filtron


#deploy:spot.cloud.global:
#  extends: .deploy:template
#  only:
#    - tags
#  environment:
#    name: prod
#    url: https://spot.ecloud.global
#  variables:
#    DOCKER_HOST: ssh://spot@spot.ecloud.global
#    FILTRON_RULES: /home/spot/filtron/rules.json
#    SPOT_HOSTNAME: spot.ecloud.global
#    SPOT_MORTY_HOSTNAME: proxy.spot.ecloud.global
#    SEARX_MORTY_URL: https://proxy.spot.ecloud.global
#    COMPOSE_PROJECT_NAME: my-spot
#    SPOT_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
#    SPOT_NGINX_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
#    PRIVATE_KEY: ${PRIVATE_KEY_PROD}
#  script:
#    - docker-compose pull
#    - docker-compose up -d --scale tor=5
#    - docker-compose restart filtron
