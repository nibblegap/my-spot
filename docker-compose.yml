version: '3.6'

services:
  redis:
    restart: unless-stopped
    image: redis:5-alpine

  spot:
    image: ${SPOT_DOCKER_IMG}:${SPOT_DOCKER_TAG}
    restart: unless-stopped
    environment:
      SEARX_REDIS_HOST: redis
      SEARX_LOGGER: INFO

  nginx:
    image: ${SPOT_NGINX_DOCKER_IMG}:${SPOT_NGINX_DOCKER_TAG}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.spot.rule=Host(`${SPOT_HOSTNAME}`)"
      - "traefik.http.routers.spot.entrypoints=websecure"
      - "traefik.http.routers.spot.tls.certresolver=spotchallenge"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  traefik:
    image: "traefik:v2.0.5"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=contact@e.email"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  letsencrypt:
